name: Make a new release
on:
  push:
    branches:
      - main
    tags:
      - "*"

env:
  DOCKERHUB_USERNAME: ... # TODO
  IMAGE_NAME: ... # TODO

jobs:
  build_docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Build Docker image
        run: |
          IMAGE_TAG="latest"
          if [[ ${{ github.ref }} == refs/tags/* ]]; then
            IMAGE_TAG="${{ github.ref }}"
            IMAGE_TAG="${IMAGE_TAG#refs/tags/}" # Remove "refs/tags/"
          fi
          docker build -t $DOCKERHUB_USERNAME/$IMAGE_NAME:$IMAGE_TAG -f deployment/Containerfile .

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u $DOCKERHUB_USERNAME --password-stdin

      - name: Push Docker image to Docker Hub
        run: |
          IMAGE_TAG="latest"
          if [[ ${{ github.ref }} == refs/tags/* ]]; then
            IMAGE_TAG="${{ github.ref }}"
            IMAGE_TAG="${IMAGE_TAG#refs/tags/}" # Remove "refs/tags/"
          fi
          docker push $DOCKERHUB_USERNAME/$IMAGE_NAME:$IMAGE_TAG

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 20.6.1
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ">=1.21.1"
      - name: Install node dependencies
        run: cd frontend && npm install --ci
      - name: Export env vars
        run: |
          echo "GH_CLIENT_KEY=${{ secrets.GH_CLIENT_KEY }}" >> $GITHUB_ENV
          echo "GH_SECRET=${{ secrets.GH_SECRET }}" >> $GITHUB_ENV
          echo "GH_AUTH_CALLBACK=${{ secrets.GH_AUTH_CALLBACK }}" >> $GITHUB_ENV
          echo "SESSION_SECRET=${{ secrets.SESSION_SECRET }}" >> $GITHUB_ENV
          echo "HOST=${{ env.HOST }}" >> $GITHUB_ENV
          echo "FRONTEND_HOST=${{ env.FRONTEND_HOST }}" >> $GITHUB_ENV
          echo "PROJECTS_DIR=./projects" >> $GITHUB_ENV
          echo "VERSION=${{ github.ref }}" >> $GITHUB_ENV
      - name: Build node
        run: |
          cd frontend && npm run generate:prod
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          distribution: goreleaser
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
