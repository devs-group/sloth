name: Make a new release
on:
  pull_request:
    paths:
      - '.github/**'
      - 'frontend/**'
      - 'backend/**'
  push:
    branches:
      - main
    tags:
      - '*'

env:
  BACKEND_IMAGE: ghcr.io/${{ github.repository }}/app:latest

jobs:
  lint-nuxt:
    name: Lint Nuxt
    runs-on: ubuntu-latest
    container:
      image: node:20.6.1
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        working-directory: frontend
        run: npm install

      - name: Run Nuxt lint
        working-directory: frontend
        run: npm run lint .

  test-backend:
    name: Test Backend
    runs-on: ubuntu-latest
    container:
      image: golang:1.21.1-alpine
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        working-directory: .
        run: go get

      - name: Run Backend Tests
        working-directory: .
        run: go test ./...

  build:
    runs-on: ubuntu-latest
    needs: [lint-nuxt, test-backend]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Configure Docker CLI
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./deployment/Containerfile
          push: true
          tags: ${{ env.BACKEND_IMAGE }}

  deploy:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: [ build ]
    if: github.ref == 'refs/heads/main'
    env:
      DEPLOY_URL: ${{ secrets.DEPLOY_URL }}
      DEPLOY_TOKEN: ${{ secrets.DEPLOY_TOKEN }}
    container:
      image: alpine:latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install curl
        run: apk add --no-cache curl

      - name: Deploy Application
        run: sh ./.deployment/deploy.sh